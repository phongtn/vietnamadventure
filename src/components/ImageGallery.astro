---
interface Image {
  src: string;
  alt: string;
  caption?: string;
}

interface Props {
  images: Image[];
}

const { images } = Astro.props;
const galleryId = `gallery-${Math.random().toString(36).substr(2, 9)}`;
---

<div id={galleryId} class="relative" x-data="{
  activeSlide: 0,
  totalSlides: images.length,
  
  prevSlide() {
    this.activeSlide = (this.activeSlide - 1 + this.totalSlides) % this.totalSlides;
  },
  
  nextSlide() {
    this.activeSlide = (this.activeSlide + 1) % this.totalSlides;
  },
  
  setSlide(index) {
    this.activeSlide = index;
  }
}">
  <!-- Main Image -->
  <div class="relative overflow-hidden rounded-lg bg-gray-100 aspect-[16/9]">
    {images.map((image, index) => (
      <div 
        x-show={`activeSlide === ${index}`}
        x-transition:enter="transition ease-out duration-300"
        x-transition:enter-start="opacity-0 transform scale-95"
        x-transition:enter-end="opacity-100 transform scale-100"
        x-transition:leave="transition ease-in duration-300"
        x-transition:leave-start="opacity-100 transform scale-100"
        x-transition:leave-end="opacity-0 transform scale-95"
        class="absolute inset-0"
        style={index === 0 ? '' : 'display: none;'}
      >
        <img 
          src={image.src} 
          alt={image.alt} 
          class="w-full h-full object-cover" 
          loading="lazy"
        />
        {image.caption && (
          <div class="absolute bottom-0 left-0 right-0 bg-black bg-opacity-60 text-white p-3">
            <p class="text-sm">{image.caption}</p>
          </div>
        )}
      </div>
    ))}
    
    <!-- Navigation arrows -->
    <button 
      class="absolute left-2 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white rounded-full p-2 hover:bg-opacity-70 focus:outline-none"
      x-on:click="prevSlide()"
      aria-label="Previous image"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polyline points="15 18 9 12 15 6"></polyline>
      </svg>
    </button>
    
    <button 
      class="absolute right-2 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white rounded-full p-2 hover:bg-opacity-70 focus:outline-none"
      x-on:click="nextSlide()"
      aria-label="Next image"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polyline points="9 18 15 12 9 6"></polyline>
      </svg>
    </button>
  </div>
  
  <!-- Thumbnails -->
  {images.length > 1 && (
    <div class="mt-3 flex space-x-2 overflow-x-auto pb-2">
      {images.map((image, index) => (
        <button 
          x-on:click={`setSlide(${index})`}
          class="flex-shrink-0 rounded-md overflow-hidden focus:outline-none focus:ring-2 focus:ring-forest"
          x-bind:class={`activeSlide === ${index} ? 'ring-2 ring-forest' : ''`}
        >
          <img 
            src={image.src} 
            alt={`Thumbnail ${index + 1}`} 
            class="h-16 w-24 object-cover" 
            loading="lazy"
          />
        </button>
      ))}
    </div>
  )}
</div>
